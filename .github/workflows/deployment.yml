name: deploy-resources-challenge-4
on:
  push:
    branches:
      - 'main'
    paths:
      - 'iac/terraform/**'
  workflow_dispatch:

defaults:
  run:
    working-directory: iac/terraform
jobs:

    # Usage for current job: ${{ steps.resources_prefix.outputs.result }}
  preview:
    name: "Deployment preview"
    runs-on: ubuntu-latest
    outputs:
      # Set output for next job
      RESOURCES_PREFIX: ${{ steps.resources_prefix.outputs.result }}
    steps:
      # Checkout the repo
      - uses: actions/checkout@v3
      # Get RESOURCES_PREFIX based on the repo name
      - name: Get repo name
        uses: actions/github-script@v5
        id: resources_prefix
        with:
          result-encoding: string
          script: return context.repo.repo.toLowerCase()
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: hashicorp/setup-terraform@v2
      - name: Terraform Init
        run: terraform init -backend-config=storage_account_name="${{secrets.TFSTATE_STORAGE_ACCOUNT_NAME}}" -backend-config=container_name="${{secrets.TFSTATE_STORAGE_CONTAINER_NAME}}" -backend-config=key="${{secrets.TFSTATE_KEY}}" -backend-config=resource_group_name="${{secrets.TFSTATE_RESOURCES_GROUP_NAME}}"
      - name: Terraform Plan
        run: terraform plan -no-color --detailed-exitcode -var="location=${{secrets.LOCATION}}" -var="resources_prefix=${{ steps.resources_prefix.outputs.result }}"
        continue-on-error: false
  
  deploy:
    name: "Apply changes"
    runs-on: ubuntu-latest
    environment: production-env
    needs: preview
    steps:
      - uses: actions/checkout@v3
      - name: Log in with Azure
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
      - uses: hashicorp/setup-terraform@v2
      - name: Terraform Init
        run: terraform init -backend-config=storage_account_name="${{secrets.TFSTATE_STORAGE_ACCOUNT_NAME}}" -backend-config=container_name="${{secrets.TFSTATE_STORAGE_CONTAINER_NAME}}" -backend-config=key="${{secrets.TFSTATE_KEY}}" -backend-config=resource_group_name="${{secrets.TFSTATE_RESOURCES_GROUP_NAME}}"
      - name: Terraform Apply
        run: terraform apply --auto-approve -var="location=${{secrets.LOCATION}}" -var="resources_prefix=${{needs.preview.outputs.RESOURCES_PREFIX}}"
    


