---
name: 'ci for userprofile'

on:
  pull_request:
    branches:
      - 'main'
    paths:
      - 'apis/userprofile/**'
      - '.github/workflows/userprofile.yml'
  workflow_dispatch:
permissions:
  pull-requests: write

defaults:
  run:
    working-directory: apis/userprofile

jobs:

  test:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 12.x
        uses: actions/setup-node@v3
        with:
          node-version: 12.x
      - run: npm ci
      - run: npm run build --if-present

      - id: npm_test
        run: npm test
      - name: 'create issue on failure'
        if: github.event_name != 'pull_request' && failure()
        run: |
          body='### Unit Test `failure`
          <details>
          <summary>Workflow details</summary>

          Workflow name: `${{ github.workflow }}`
          Action: `${{ github.event_name }}`
          Job: `${{ github.job }}`
          PR: #${{ github.event.number }}
          </details>

          Test details: [Run #${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          Pusher: @${{ github.actor }}'
          gh issue create --title "Issue report" --body "$body"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'create PR comment on failure'
        if: github.event_name == 'pull_request' && failure()
        run: |
          body='### Unit Test `failure`
          <details>
          <summary>Workflow details</summary>

          Workflow name: `${{ github.workflow }}`
          Action: `${{ github.event_name }}`
          Job: `${{ github.job }}`
          PR: #${{ github.event.number }}
          </details>

          Test details: [Run #${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          Pusher: @${{ github.actor }}'
          gh pr comment ${{github.event.number}} --body "$body"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: azure/docker-login@v1
      with:
        login-server: devopsoh02778cr.azurecr.io
        username: devopsoh02778cr
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker build . -t api-userprofile:${{ github.sha }}
        docker push devopsoh02778cr.azurecr.io/devopsoh
